<project name="clojure-protobuf" default="package">

  <property name="repository.clojure" value="http://clojure.googlecode.com/files"/>
  <property name="dep.clojure" value="clojure-1.1.0"/>
  <property name="clojure.jar" value="lib/clojure.jar"/>

  <property name="repository.protobuf" value="http://protobuf.googlecode.com/files"/>
  <property name="dep.protobuf" value="protobuf-2.3.0"/>
  <property name="protobuf" value="lib/${dep.protobuf}"/>  

  <condition property="configure" value="">
    <not><available file="${protobuf}/Makefile"/></not>
  </condition>

  <target name="init">
    <mkdir dir="lib"/>
    <mkdir dir="classes"/>
  </target>

  <target name="clean">
    <delete>
      <fileset dir="." includes="*.jar"/>
    </delete>
    <delete dir="lib"/>
    <delete dir="classes"/>
  </target>

  <available file="${protobuf}" property="has_protobuf"/>
  <target name="fetch_protobuf" depends="init" unless="has_protobuf">
    <get src="${repository.protobuf}/${dep.protobuf}.tar.gz"
         dest="lib/${dep.protobuf}.tar.gz" usetimestamp="true"/>
    <gunzip src="lib/${dep.protobuf}.tar.gz"/>
    <untar src="lib/${dep.protobuf}.tar" dest="lib"/>
    <delete file="lib/${dep.protobuf}.tar"/>
  </target>

  <target name="config_protobuf" depends="fetch_protobuf" if="configure">
    <chmod file="${protobuf}/configure" perm="+x"/>
    <exec dir="${protobuf}" executable="./configure">
      <arg line="${configure}"/>
    </exec>
  </target>

  <available file="${protobuf}/src/protoc" property="has_protoc"/>
  <target name="make_protobuf" depends="config_protobuf" unless="has_protoc">
    <exec dir="${protobuf}" executable="make" failonerror="true"/>
  </target>

  <target name="install" depends="make_protobuf">
    <chmod file="${protobuf}/install-sh" perm="+x"/>
    <exec dir="${protobuf}" executable="make" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>

  <target name="compile_protobuf" depends="make_protobuf">
    <exec dir="${protobuf}/java" executable="../src/protoc">
      <arg value="--java_out=src/main/java"/>
      <arg value="-I../src"/>
      <arg value="../src/google/protobuf/descriptor.proto"/>
    </exec>
    <javac srcdir="${protobuf}/java/src/main/java" destdir="classes"/>
  </target>

  <available file="${clojure.jar}" property="has_clojure"/>
  <target name="fetch_clojure" depends="init" unless="has_clojure">
    <get src="${repository.clojure}/${dep.clojure}.zip"
         dest="lib/${dep.clojure}.zip" usetimestamp="true"/>
    <unzip src="lib/${dep.clojure}.zip" dest="lib"/>
    <copy file="lib/${dep.clojure}/clojure.jar" todir="lib"/>
  </target>

  <path id="classpath">
    <pathelement location="${clojure.jar}"/>
    <pathelement location="src/clj"/>
    <pathelement location="classes"/>
  </path>

  <target name="compile" depends="compile_protobuf,fetch_clojure">
    <javac srcdir="src/jvm" destdir="classes" classpathref="classpath"/>
    <java classname="clojure.lang.Compile" classpathref="classpath" failonerror="true">
      <sysproperty key="clojure.compile.path" value="classes"/>
      <arg value="protobuf"/>
    </java>
  </target>

  <target name="package" depends="compile">
    <jar destfile="clojure-protobuf.jar" basedir="classes"/>
  </target>

</project>
