import "clojure/protobuf/extensions.proto";

option java_package = "clojure.protobuf";
option java_outer_classname = "Test";

message Foo {
  optional uint32   id        = 1 [default = 43];
  optional string   label     = 2 [(meta) = "{:a 1 :b 2 :c 3}"];
  repeated string   tags      = 3;
  optional Foo      parent    = 4;
  repeated Response responses = 5;

  repeated double doubles = 6;
  repeated float  floats  = 7;

  optional double lat  = 8;
  optional float  long = 9;

  enum Response {
    YES      = 0;
    NO       = 1;
    MAYBE    = 2;
    NOT_SURE = 3;
  }

  repeated Item  tag_set   = 10 [(set)    = true];
  repeated Pair  attr_map  = 11 [(map)    = true];
  repeated Foo   foo_by_id = 12 [(map_by) = "id"];
  repeated Group groups    = 13 [(map)    = true];
  repeated Item  item_map  = 14 [(map_by) = "item"];
  repeated Pair  pair_map  = 15 [(map_by) = "key"];
  optional bool  deleted   = 16 [default  = false];
}

message Pair {
  required string key = 1;
  required string val = 2;
}

message Group {
  required string key = 1;
  repeated Foo    val = 2;
}

message Item {
  required string item   = 1;
  required bool   exists = 2 [default = true];
}

message ErrorMsg {
  required sint32 code = 1;
  optional string data = 2;
}

message Response {
  required bool ok = 1;
  optional ErrorMsg error = 2;
}